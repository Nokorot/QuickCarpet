name: Development Builds

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'no-ci')"
    strategy:
      fail-fast: false
      matrix:
        java: [17]
        gradle: [7.4]
    container:
      image: gradle:${{ matrix.gradle }}-jdk${{ matrix.java }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set repository as a safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Cache Gradle packages
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.gradle/caches
            /home/gradle/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-
      - name: Cache Loom Files
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            build/loom-cache
            .gradle/loom-cache
          key: ${{ runner.os }}-loom-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml', 'src/main/resource/quickcarpet.accesswidener') }}
          restore-keys: |
            ${{ runner.os }}-loom-
      - name: Build with Gradle
        run: gradle clean build -x check --stacktrace --no-daemon --profile
      - name: Upload Main JARs
        uses: actions/upload-artifact@v3
        if: ${{ !env.ACT }}
        with:
          name: quickcarpet-jars
          path: build/libs/*.jar
      - name: Upload API JARs
        uses: actions/upload-artifact@v3
        if: ${{ !env.ACT }}
        with:
          name: quickcarpet-api-jars
          path: api/build/libs/*.jar
  unit-test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        java: [17]
        gradle: [7.4]
    container:
      image: gradle:${{ matrix.gradle }}-jdk${{ matrix.java }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set repository as a safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Cache Gradle packages
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.gradle/caches
            /home/gradle/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-
      - name: Cache Loom Files
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            build/loom-cache
            .gradle/loom-cache
          key: ${{ runner.os }}-loom-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml', 'src/main/resource/quickcarpet.accesswidener') }}
          restore-keys: |
            ${{ runner.os }}-loom-
      - name: Run Unit Tests
        run: gradle test --stacktrace --no-daemon
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always() && !env.ACT
        with:
          name: Unit Test Results (Java ${{ matrix.java }}, Gradle ${{ matrix.gradle }})
          path: build/test-results/**/*.xml
  game-test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        java: [17]
        gradle: [7.4]
    container:
      image: gradle:${{ matrix.gradle }}-jdk${{ matrix.java }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set repository as a safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Cache Gradle packages
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.gradle/caches
            /home/gradle/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-
      - name: Cache Loom Files
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            build/loom-cache
            .gradle/loom-cache
          key: ${{ runner.os }}-loom-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml', 'src/main/resource/quickcarpet.accesswidener') }}
          restore-keys: |
            ${{ runner.os }}-loom-
      - name: Download LazyDFU
        uses: ./.github/actions/download-mods
        with:
          mods: lazydfu
      - name: Run Game Tests
        run: gradle runTestServer --stacktrace --no-daemon
      - name: Publish Test World
        uses: actions/upload-artifact@v3
        if: always() && !env.ACT
        with:
          name: gametestworld
          path: run/gametestworld/*
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always() && !env.ACT
        with:
          name: Game Test Results (Java ${{ matrix.java }}, Gradle ${{ matrix.gradle }})
          path: build/test-results/**/*.xml
  game-test-with-mods:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        java: [17]
        gradle: [7.4]
        lithium: [mc1.19.2-0.10.2]
    container:
      image: gradle:${{ matrix.gradle }}-jdk${{ matrix.java }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set repository as a safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Cache Gradle packages
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.gradle/caches
            /home/gradle/.gradle/caches
          # Store this under a separate key to cache remapped mods
          key: ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-lithium-${{ matrix.lithium }}-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml') }}
            ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-lithium-${{ matrix.lithium }}-
            ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-
      - name: Cache Loom Files
        uses: actions/cache@v3
        if: ${{ !env.ACT }}
        with:
          path: |
            build/loom-cache
            .gradle/loom-cache
          key: ${{ runner.os }}-loom-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml', 'src/main/resource/quickcarpet.accesswidener') }}
          restore-keys: |
            ${{ runner.os }}-loom-
      - name: Download Mods
        uses: ./.github/actions/download-mods
        with:
          mods: |
            lithium=${{ matrix.lithium }}
            lazydfu
      - name: Run Game Tests
        run: gradle runTestServer --stacktrace --no-daemon
      - name: Publish Test World
        uses: actions/upload-artifact@v3
        if: always() && !env.ACT
        with:
          name: gametestworld-mods
          path: run/gametestworld/*
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always() && !env.ACT
        with:
          name: Game Test Results (Java ${{ matrix.java }}, Gradle ${{ matrix.gradle }}, Lithium ${{ matrix.lithium }})
          path: build/test-results/**/*.xml
  publish-test-results:
    runs-on: ubuntu-latest
    needs: [unit-test, game-test, game-test-with-mods]
    if: success() || failure()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.19
        if: ${{ !env.ACT }}
        with:
          check_name: Test Results
          files: artifacts/**/*.xml