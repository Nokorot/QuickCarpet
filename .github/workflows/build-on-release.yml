name: Releases

on:
  release:
    types:
      - created

jobs:
  setup-workflow:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup-workflow.outputs.matrix-default }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Workflow
        id: setup-workflow
        uses: ./.github/actions/setup-workflow
  release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-workflow.outputs.matrix) }}
    container:
      image: gradle:${{ matrix.gradle }}-jdk${{ matrix.java }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set repository as a safe directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            /home/gradle/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.gradle }}-jdk${{ matrix.java }}-
      - name: Cache Loom Files
        uses: actions/cache@v3
        with:
          path: |
            build/loom-cache
            .gradle/loom-cache
          key: ${{ runner.os }}-loom-${{ hashFiles('*gradle.*', '*/*gradle.kts', 'buildSrc/src/**', '*.versions.toml', 'src/main/resource/quickcarpet.accesswidener') }}
          restore-keys: |
            ${{ runner.os }}-loom-
      - name: Build with Gradle
        run: ./gradlew build
      - name: Attach JARs to release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: build/libs/*.jar;api/build/libs/*.jar
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: build/test-results/**/*.xml
      - name: Publish Test World
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: gametestworld
          path: run/gametestworld/*
